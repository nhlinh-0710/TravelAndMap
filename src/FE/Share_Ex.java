
package FE;

import jakarta.mail.Authenticator;
import jakarta.mail.Message;
import jakarta.mail.MessagingException;
import jakarta.mail.PasswordAuthentication;
import jakarta.mail.Session;
import jakarta.mail.Transport;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import java.util.Properties;
import java.util.Random;
import java.sql.*;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.File;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Collections;
import javax.swing.DefaultListModel;
import javax.swing.JList;





/**
 *
 * @author DUY NGUYEN
 */
public class Share_Ex extends javax.swing.JFrame {
    private String otpCode;  // Lưu OTP để xác nhận
    private String userEmail;  // Lưu email người dùng
    private JPanel postContainer;

    /**
     * Creates new form Share_Ex
     */
    public Share_Ex() {
       initComponents();
       jScrollPane2.setViewportView(commentList);
        postContainer = new JPanel();
        postContainer.setLayout(new BoxLayout(postContainer, BoxLayout.Y_AXIS));
        postContainer.setBackground(Color.WHITE);
        jScrollPane2.setViewportView(postContainer);  
        loadPostsFromDatabase();  // Gọi hàm để tải các bài viết đã lưu

    }
    DefaultListModel<String> commentModel = new DefaultListModel<>();
    JList<String> commentList = new JList<>(commentModel);
    private void loadPostsFromDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelandmap", "root", "");
            String sql = "SELECT ten, email, diadiem, noidung, anh FROM baiviet";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                String name = rs.getString("ten");
                String gmail = rs.getString("email");
                String location = rs.getString("diadiem");
                String content = rs.getString("noidung");
                String imagePath = rs.getString("anh");

                addPost(name, gmail, location, content, imagePath);
            }

            rs.close();
            pstmt.close();
            conn.close();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi tải bài viết từ MySQL!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1300, 2000));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ABOUT US ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 10, 60, 40));

        jLabel4.setFont(new java.awt.Font("Stencil", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Share Your Moments, Inspire the World");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, -1, 30));

        jLabel3.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Share Experiences");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 380, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/anhnui1.jpg"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 0, 960, 200));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logodone.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 199));

        jLabel6.setText("HOME");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 70, -1, 20));

        jLabel7.setText("CONTACT");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 120, -1, -1));

        jLabel8.setText("HELP");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 170, -1, 20));
        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 960, 700));

        jButton1.setText("Tạo Bài Viết");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 190, 40));

        jButton2.setText("Xóa Bài Viết");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 190, 40));

        jButton3.setText("Thêm Bình Luận Bài Viết");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 190, 40));

        jButton4.setText("Chỉnh Sửa Bài Viết");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 190, 40));

        jButton5.setText("Home");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 190, 30));

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
  private void addPost(String name, String gmail, String location, String content, String imagePath) {
        JPanel postPanel = new JPanel();
        postPanel.setLayout(new BorderLayout());
        postPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        postPanel.setBackground(Color.WHITE);

        JLabel textLabel = new JLabel("<html><b>" + name + "</b><br>" + gmail + "<br>" + location + "<br>" + content);
        JLabel imageLabel = new JLabel();

        ImageIcon imageIcon = new ImageIcon(imagePath);
        Image scaledImage = imageIcon.getImage().getScaledInstance(300, 200, Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(scaledImage));

        postPanel.add(textLabel, BorderLayout.NORTH);
        postPanel.add(imageLabel, BorderLayout.CENTER);

        postContainer.add(postPanel);  
        postContainer.revalidate();  
        postContainer.repaint();  
    }

    private void saveToDatabase(String name, String gmail, String location, String content, String imagePath) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelandmap", "root", "");
            String sql = "INSERT INTO baiviet (ten, email, diadiem, noidung, anh, binhluan) VALUES (?, ?, ?, ?, ?, ?)";  
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, name);
            pstmt.setString(2, gmail);
            pstmt.setString(3, location);
            pstmt.setString(4, content);
            pstmt.setString(5, imagePath);
            pstmt.setString(6, "");  // Bình luận khởi tạo rỗng
            pstmt.executeUpdate();
            pstmt.close();
            conn.close();

            addPost(name, gmail, location, content, imagePath);  
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi lưu bài viết vào MySQL!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }





    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JTextField nameField = new JTextField();
        JTextField gmailField = new JTextField();
        JTextField locationField = new JTextField();
        JTextArea contentArea = new JTextArea(5, 20);
        JLabel imageLabel = new JLabel("Chưa có ảnh");
        JButton uploadButton = new JButton("Chọn Ảnh");

        JFileChooser fileChooser = new JFileChooser();
        uploadButton.addActionListener(e -> {
            int result = fileChooser.showOpenDialog(null);
            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                imageLabel.setText(file.getAbsolutePath());
            }
        });

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.add(new JLabel("Tên:"));
        panel.add(nameField);
        panel.add(new JLabel("Gmail:"));
        panel.add(gmailField);
        panel.add(new JLabel("Địa điểm:"));
        panel.add(locationField);
        panel.add(new JLabel("Nội dung:"));
        panel.add(new JScrollPane(contentArea));
        panel.add(new JLabel("Ảnh:"));
        panel.add(uploadButton);
        panel.add(imageLabel);

        int option = JOptionPane.showConfirmDialog(null, panel, "Nhập thông tin bài viết", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            saveToDatabase(nameField.getText(), gmailField.getText(), locationField.getText(), contentArea.getText(), imageLabel.getText());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
  JTextField nameField = new JTextField();
        JTextField gmailField = new JTextField();

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.add(new JLabel("Tên:"));
        panel.add(nameField);
        panel.add(new JLabel("Gmail:"));
        panel.add(gmailField);

        int option = JOptionPane.showConfirmDialog(null, panel, "Nhập thông tin để chỉnh sửa bài viết", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            userEmail = gmailField.getText();
            otpCode = generateOTP();
            sendOTP(userEmail, otpCode);

            verifyOTP(nameField.getText(), userEmail);  // Xác nhận OTP
        }
    }//GEN-LAST:event_jButton4ActionPerformed
  private String generateOTP() {
        Random rand = new Random();
        return String.format("%06d", rand.nextInt(1000000));  // Tạo OTP 6 chữ số
    }

    private void sendOTP(String email, String otp) {
        String senderEmail = "duyminh0935@gmail.com";  // Gmail gửi OTP
        String senderPassword = "hqsk jovv gceo uyfi";  // Mật khẩu Gmail

        Properties properties = new Properties();
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.port", "587");

      Session session = Session.getInstance(properties, new jakarta.mail.Authenticator() {
    @Override
    protected PasswordAuthentication getPasswordAuthentication() {
        return new PasswordAuthentication(senderEmail, senderPassword);  // Không cần `toCharArray()`
    }
});

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
            message.setSubject("Xác nhận chỉnh sửa bài viết");
            message.setText("Mã OTP của bạn là: " + otp);

            Transport.send(message);
            JOptionPane.showMessageDialog(null, "Mã OTP đã gửi đến email: " + email);
        } catch (MessagingException e) {
            JOptionPane.showMessageDialog(null, "Lỗi gửi OTP! Kiểm tra lại cấu hình email.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }


   private void verifyOTP(String name, String email) {
        JTextField otpField = new JTextField();
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.add(new JLabel("Nhập mã OTP:"));
        panel.add(otpField);

        int option = JOptionPane.showConfirmDialog(null, panel, "Xác nhận OTP", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION && otpField.getText().equals(otpCode)) {
            editPost(name, email);  // Nếu OTP đúng, cho phép chỉnh sửa bài viết
        } else {
            JOptionPane.showMessageDialog(null, "Mã OTP không đúng! Vui lòng thử lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void editPost(String name, String email) {
        JTextField locationField = new JTextField();
        JTextArea contentArea = new JTextArea(5, 20);

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.add(new JLabel("Địa điểm mới:"));
        panel.add(locationField);
        panel.add(new JLabel("Nội dung mới:"));
        panel.add(new JScrollPane(contentArea));

        int option = JOptionPane.showConfirmDialog(null, panel, "Chỉnh sửa bài viết", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            try {
               java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelandmap", "root", "");
              String sql = "UPDATE baiviet SET diadiem = ?, noidung = ? WHERE ten = ? AND email = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, locationField.getText());
                pstmt.setString(2, contentArea.getText());
                pstmt.setString(3, name);
                pstmt.setString(4, email);
                pstmt.executeUpdate();
                pstmt.close();
                conn.close();

                JOptionPane.showMessageDialog(null, "Bài viết đã được chỉnh sửa thành công!");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi cập nhật bài viết!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }



    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         JTextField nameField = new JTextField();
    JTextField gmailField = new JTextField();

    JPanel panel = new JPanel();
    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
    panel.add(new JLabel("Tên:"));
    panel.add(nameField);
    panel.add(new JLabel("Gmail:"));
    panel.add(gmailField);

    int option = JOptionPane.showConfirmDialog(null, panel, "Xác nhận xóa bài viết", JOptionPane.OK_CANCEL_OPTION);
    if (option == JOptionPane.OK_OPTION) {
        userEmail = gmailField.getText();
        otpCode = generateOTP();
        sendOTP(userEmail, otpCode);
        verifyOTPForDelete(nameField.getText(), userEmail);
    }
 // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
private void verifyOTPForDelete(String name, String email) {
    JTextField otpField = new JTextField();
    JPanel panel = new JPanel();
    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
    panel.add(new JLabel("Nhập mã OTP:"));
    panel.add(otpField);

    int option = JOptionPane.showConfirmDialog(null, panel, "Xác nhận OTP để xóa bài viết", JOptionPane.OK_CANCEL_OPTION);
    if (option == JOptionPane.OK_OPTION && otpField.getText().equals(otpCode)) {
        deletePost(name, email);  
    } else {
        JOptionPane.showMessageDialog(null, "Mã OTP không đúng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}

private void deletePost(String name, String email) {
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelandmap", "root", "");
        String sql = "DELETE FROM baiviet WHERE ten = ? AND email = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, name);
        pstmt.setString(2, email);
        int rowsAffected = pstmt.executeUpdate();
        pstmt.close();
        conn.close();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Bài viết đã được xóa!");
        } else {
            JOptionPane.showMessageDialog(null, "Không tìm thấy bài viết!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Lỗi xóa bài viết!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
  JTextField postTitleField = new JTextField();
    JTextField authorField = new JTextField();
    JTextArea commentArea = new JTextArea(5, 20);

    JPanel panel = new JPanel();
    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
    panel.add(new JLabel("Tên bài viết:"));
    panel.add(postTitleField);
    panel.add(new JLabel("Tên người bình luận:"));
    panel.add(authorField);
    panel.add(new JLabel("Nội dung bình luận:"));
    panel.add(new JScrollPane(commentArea));

    int result = JOptionPane.showConfirmDialog(null, panel, "Thêm bình luận", JOptionPane.OK_CANCEL_OPTION);

    if (result == JOptionPane.OK_OPTION) {
        String postTitle = postTitleField.getText().trim();
        String author = authorField.getText().trim();
        String comment = commentArea.getText().trim();

        if (postTitle.isEmpty() || author.isEmpty() || comment.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin!", "Thiếu thông tin", JOptionPane.WARNING_MESSAGE);
            return;
        }

        addCommentToDatabase(postTitle, author, comment);
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Home dk = new Home();
        dk.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

   private void addCommentToDatabase(String postTitle, String commentAuthor, String commentContent) {
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelandmap", "root", "");

        String checkSql = "SELECT binhluan, email FROM baiviet WHERE ten = ?";
        PreparedStatement checkStmt = conn.prepareStatement(checkSql);
        checkStmt.setString(1, postTitle);
        ResultSet rs = checkStmt.executeQuery();

        if (rs.next()) {
            String currentComment = rs.getString("binhluan");
            String ownerEmail = rs.getString("email");

            String newComment = (currentComment == null || currentComment.isEmpty())
                ? "- " + commentAuthor + ": " + commentContent
                : currentComment + "\n- " + commentAuthor + ": " + commentContent;

            String updateSql = "UPDATE baiviet SET binhluan = ? WHERE ten = ?";
            PreparedStatement updateStmt = conn.prepareStatement(updateSql);
            updateStmt.setString(1, newComment);
            updateStmt.setString(2, postTitle);
            updateStmt.executeUpdate();
            updateStmt.close();

            // Gửi email thông báo bình luận
            if (ownerEmail != null) {
                sendCommentNotification(ownerEmail, commentAuthor, commentContent);
            }

            JOptionPane.showMessageDialog(null, "Bình luận đã được thêm!");
        } else {
            JOptionPane.showMessageDialog(null, "Không tìm thấy bài viết để bình luận!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

        rs.close();
        checkStmt.close();
        conn.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Lỗi khi thêm bình luận!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

private String getPostOwnerEmail(String postTitle) {
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelandmap", "root", "");
        String sql = "SELECT email FROM baiviet WHERE ten = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, postTitle);
        ResultSet rs = pstmt.executeQuery();

        if (rs.next()) {
            return rs.getString("email");
        }
        rs.close();
        pstmt.close();
        conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return null;
}
private void sendCommentNotification(String email, String author, String content) {
    String senderEmail = "duyminh0935@gmail.com";
    String senderPassword = "hqsk jovv gceo uyfi";

    Properties properties = new Properties();
    properties.put("mail.smtp.auth", "true");
    properties.put("mail.smtp.starttls.enable", "true");
    properties.put("mail.smtp.host", "smtp.gmail.com");
    properties.put("mail.smtp.port", "587");

    Session session = Session.getInstance(properties, new Authenticator() {
        @Override
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(senderEmail, senderPassword);
        }
    });

    try {
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(senderEmail));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
        message.setSubject("Thông báo: Có bình luận mới");
        message.setText("Người dùng " + author + " đã bình luận:\n\n" + content);

        Transport.send(message);
    } catch (MessagingException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Lỗi gửi email thông báo!", "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}

private void updateCommentDisplay(String name) {
     try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelandmap", "root", "");

        // Lấy bình luận từ MySQL
        String sql = "SELECT binhluan FROM baiviet WHERE ten = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, name);
        ResultSet rs = pstmt.executeQuery();

        commentModel.clear();  // Xóa danh sách hiện tại

        if (rs.next()) {
            String comments = rs.getString("binhluan");
            if (comments != null && !comments.isEmpty()) {
                String[] commentArray = comments.split("\n");
                for (String comment : commentArray) {
                    commentModel.addElement(comment);  // Thêm vào danh sách bình luận
                }
            } else {
                commentModel.addElement("Chưa có bình luận nào.");
            }
        } else {
            commentModel.addElement("Không tìm thấy bài viết.");
        }

        rs.close();
        pstmt.close();
        conn.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Lỗi hiển thị bình luận!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }

}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
          java.awt.EventQueue.invokeLater(() -> new Share_Ex().setVisible(true));
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Share_Ex().setVisible(true);
            }
        });
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Share_Ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Share_Ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Share_Ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Share_Ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
